name: "CI"

on: [push, pull_request]
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_PASSWORD: secret
          MYSQL_USER: solawi_ut
          MYSQL_DATABASE: solawi_ut
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: xdebug
          tools: composer, cs2pr

      - name: Prepare Laravel Application
        run: |
          php -r "file_exists('.env') || copy('.env.testing.example', '.env');"
          php artisan key:generate

      - name: Run Testsuite
        run: vendor/bin/pest --coverage-clover coverage.xml --configuration ./phpunit.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

  phpcs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: none
          tools: composer, cs2pr

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Setup cache
        uses: pat-s/always-upload-cache@v1.1.4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-suggest --no-progress

      - name: Detect coding standard violations
        run: vendor/bin/phpcs --standard=ruleset.xml app/ -q --report=checkstyle | cs2pr --graceful-warnings
        continue-on-error: true
